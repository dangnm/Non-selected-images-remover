/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package nonselectedimagesremover;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author wilber
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form App
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        firstFolderPathTextField = new javax.swing.JTextField();
        jBtnFirstFolderPath = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        secondFolderPathTextField = new javax.swing.JTextField();
        jBtnSecondFolderPath = new javax.swing.JButton();
        jBtnProcess = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Non selected images remover");
        setMinimumSize(new java.awt.Dimension(400, 200));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        firstFolderPathTextField.setEditable(false);
        firstFolderPathTextField.setText("...");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(firstFolderPathTextField, gridBagConstraints);

        jBtnFirstFolderPath.setText("Open first folder");
        jBtnFirstFolderPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnFirstFolderPathActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jBtnFirstFolderPath, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        secondFolderPathTextField.setEditable(false);
        secondFolderPathTextField.setText("...");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(secondFolderPathTextField, gridBagConstraints);

        jBtnSecondFolderPath.setText("Open second folder");
        jBtnSecondFolderPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSecondFolderPathActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jBtnSecondFolderPath, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jPanel2, gridBagConstraints);

        jBtnProcess.setText("Process");
        jBtnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnProcessActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jBtnProcess, gridBagConstraints);

        jLabel1.setText("This app will allow to remove files in the second folder which are not existing in the first folder");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        getContentPane().add(jLabel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnFirstFolderPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnFirstFolderPathActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnValue = fileChooser.showOpenDialog(this);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFolder = fileChooser.getSelectedFile();
            firstFolderPathTextField.setText(selectedFolder.getAbsolutePath());
        }
    }//GEN-LAST:event_jBtnFirstFolderPathActionPerformed

    private void jBtnSecondFolderPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSecondFolderPathActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnValue = fileChooser.showOpenDialog(this);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFolder = fileChooser.getSelectedFile();
            secondFolderPathTextField.setText(selectedFolder.getAbsolutePath());
        }
    }//GEN-LAST:event_jBtnSecondFolderPathActionPerformed

    private void jBtnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnProcessActionPerformed
        // TODO add your handling code here:\
        compareAndDelete();
    }//GEN-LAST:event_jBtnProcessActionPerformed

     private void compareAndDelete() {
        String folderA = firstFolderPathTextField.getText();
        String folderB = secondFolderPathTextField.getText();

        File[] filesA = new File(folderA).listFiles();
        File[] filesB = new File(folderB).listFiles();

        if (filesA != null && filesB != null) {
            for (File fileB : filesB) {
                String lowercaseNameB = getLowercaseNameWithoutExtension(fileB);
                boolean hasMatchingFileA = false;
                for (File fileA : filesA) {
                    String lowercaseNameA = getLowercaseNameWithoutExtension(fileA);
                    if (lowercaseNameA.equals(lowercaseNameB)) {
                        hasMatchingFileA = true;
                        break;
                    }
                }
                if (!hasMatchingFileA) {
                    fileB.delete();
                }
            }
            JOptionPane.showMessageDialog(this, "Comparison and deletion complete.");
        } else {
            JOptionPane.showMessageDialog(this, "Error: Folder not found.");
        }
    }
     
    private String getLowercaseNameWithoutExtension(File file) {
        String name = file.getName();
        int lastIndex = name.lastIndexOf('.');
        if (lastIndex == -1) {
            return name.toLowerCase();
        } else {
            return name.substring(0, lastIndex).toLowerCase();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField firstFolderPathTextField;
    private javax.swing.JButton jBtnFirstFolderPath;
    private javax.swing.JButton jBtnProcess;
    private javax.swing.JButton jBtnSecondFolderPath;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField secondFolderPathTextField;
    // End of variables declaration//GEN-END:variables
}
